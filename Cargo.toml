[package]
edition = "2021"
name    = "MQTT"
version = "0.1.0"

[[bin]]
name = "MQTT"
path = "./src/bin/main.rs"

[dependencies]
defmt = "1.0.1"
esp-bootloader-esp-idf = "0.1.0"
esp-hal = { version = "=1.0.0-beta.1", features = [
  "defmt",
  "esp32c3",
  "unstable",
] }

embassy-net = { version = "0.7.0", features = ["defmt", "dhcpv4", "medium-ethernet", "tcp", "udp", "dhcpv4-hostname"] }
embedded-io = { version = "0.6.1", features = ["defmt-03"] }
embedded-io-async = { version = "0.6.1", features = ["defmt-03"] }
esp-alloc = { version = "0.8.0", features = ["defmt"] }
esp-backtrace = { version = "0.16.0", features = [
  "defmt",
  "esp32c3",
  "exception-handler",
  "panic-handler",
] }
esp-println = { version = "0.14.0", features = ["defmt-espflash", "esp32c3"] }
# for more networking protocol support see https://crates.io/crates/edge-net
bt-hci = { version = "0.2.1", features = [] }
critical-section = "1.2.0"
embassy-executor = { version = "0.7.0", features = [
  "defmt",
  "task-arena-size-20480",
] }
embassy-time = { version = "0.4.0", features = ["defmt"] }
esp-hal-embassy = { version = "0.8.1", features = ["defmt", "esp32c3"] }
esp-wifi = { version = "0.14.1", features = [
  "ble",
  "builtin-scheduler",
  "coex",
  "defmt",
  "esp-alloc",
  "esp32c3",
  "smoltcp",
  "wifi",
] }
smoltcp = { version = "0.12.0", default-features = false, features = ["defmt", "medium-ethernet", "multicast", "proto-dhcpv4", "proto-dns", "proto-ipv4", "socket-dns", "socket-icmp", "socket-raw", "socket-tcp", "socket-udp"] }
static_cell = { version = "2.1.0", features = ["nightly"] }
trouble-host = { version = "0.1.0", features = ["gatt"] }
heapless = "0.8.0"
mqttrust = { version = "0.6.0", features = ["defmt", "defmt-impl"] }
tinymqtt = "0.1.3"
bosch-bme680 = { version = "1.0.4", features = ["embedded-hal-async"] }
esp32-dht11-rs = { git = "https://github.com/rekkun/esp32-dht11-rs-embassy", version = "0.1.3" }
embassy-sync = "0.7.0"
embedded-hal = "1.0.0"


[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units    = 1     # LLVM can perform better optimizations using a single thread
debug            = 2
debug-assertions = false
incremental      = false
lto              = 'fat'
opt-level        = 's'
overflow-checks  = false
